# Default server configuration
server {
	# Public domain name or public server ip 
    server_name 192.168.2.63;

	# Root directory 
	root /var/www/html;

    # If the configuration had not defined this context as the
    # default_server, NGINX would direct requests to this server only if
    # the HTTP host header matched the value provided to the
    # server_name directive.
    listen 80 default_server;
	listen [::]:80 default_server;

	# Redirect to https
	#return 301 https://$host$request_uri;

    index index.php index.html index.htm;
    
    location / {
		# save static content as zip and send it when requested
		gzip_static on;
		# First attempt to serve request as file, then as directory,
        # then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

    # pass PHP scripts to FastCGI server
	location ~ \.php$ {
		include /etc/nginx/snippets/fastcgi-php.conf;
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
		# zip dynamic content
		gzip on;
	}
	
	location ~ /\.ht {
        deny all;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
	ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

	index index.php index.html index.htm;
    
    location / {
		# save static content as zip and send it when requested
		gzip_static on;
		# First attempt to serve request as file, then as directory,
        # then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# pass PHP scripts to FastCGI server
	location ~ \.php$ {
		include /etc/nginx/snippets/fastcgi-php.conf;
		# zip dynamic content
		gzip on;
		# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	}
}